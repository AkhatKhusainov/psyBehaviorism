import anthropic
import json
import pandas as pd
import numpy as np
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import time
import re

INPUT_FILE = '–°–º–µ—à–∞–Ω–Ω—ã–µALL.txt'
LABELS_FILE = '–Ω–æ–º–µ—Ä–∞_—Ç–µ–∫—Å—Ç–æ–≤ALL.txt'  
OUTPUT_FILE = '—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã_–∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏.xlsx'
N_TEXTS = 540  

client = anthropic.Anthropic(
    api_key=claude_api  #API –∫–ª—é—á
)

CLASS_MAPPING = {
    '–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π': [1, 0, 0],
    '–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π': [0, 1, 0],
    '–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π': [0, 0, 1]
}

CLASS_NAMES = ['–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π', '–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π', '–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π']

def classify_text(text, custom_prompt=""):
    """
    –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é Claude API

    Args:
        text (str): –¢–µ–∫—Å—Ç –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
        custom_prompt (str): –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç

    Returns:
        str: –ö–ª–∞—Å—Å —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """

    base_prompt = f"""
{custom_prompt}

–¢–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:
\"\"\"{text}\"\"\"

–û—Ç–≤–µ—Ç—å **—Ç–æ–ª—å–∫–æ –æ–¥–Ω–∏–º JSON-–æ–±—ä–µ–∫—Ç–æ–º** —Å–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π:
{{"–∫–ª–∞—Å—Å": "–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π/–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π/–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π"}}
"""

    try:
        response = client.messages.create(
            model="claude-3-5-sonnet-20241022",  
            max_tokens=100,
            temperature=0.1,
            messages=[{"role": "user", "content": base_prompt}]
        )

        content = response.content[0].text.strip()

        
        json_match = re.search(r'\{[^}]*"–∫–ª–∞—Å—Å"[^}]*\}', content)
        if json_match:
            data = json.loads(json_match.group(0))
            predicted_class = data.get("–∫–ª–∞—Å—Å", "").lower()

           
            if "–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤" in predicted_class:
                return "–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π"
            elif "–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤" in predicted_class:
                return "–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π"
            elif "–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤" in predicted_class:
                return "–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π"

        return None

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
        return None

def load_texts(filename):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ–∫—Å—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            texts = [t.strip() for t in f.read().split('*********') if t.strip()]
        return texts
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {filename}: {e}")
        return []

def load_labels(filename):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –º–µ—Ç–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –Ω–æ–º–µ—Ä [one-hot –≤–µ–∫—Ç–æ—Ä]"""
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            lines = f.readlines()

        labels = []
        for line in lines:
            line = line.strip()
            if not line:
                continue
       
            match = re.search(r'\[(\d+),\s*(\d+),\s*(\d+)\]', line)
            if match:
                vector = [int(match.group(1)), int(match.group(2)), int(match.group(3))]
                labels.append(vector)

        return labels
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –º–µ—Ç–æ–∫ {filename}: {e}")
        return []

def text_to_onehot(class_name):
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –≤ one-hot encoding"""
    return CLASS_MAPPING.get(class_name, [0, 0, 0])

def onehot_to_class_name(vector):
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç one-hot –≤–µ–∫—Ç–æ—Ä –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞"""
    if vector == [1, 0, 0]:
        return "–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π"
    elif vector == [0, 1, 0]:
        return "–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π"
    elif vector == [0, 0, 1]:
        return "–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π"
    else:
        return "–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π"

def calculate_metrics(y_true, y_pred):
    """–í—ã—á–∏—Å–ª—è–µ—Ç –º–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏"""

    y_true_idx = [np.argmax(label) for label in y_true]
    y_pred_idx = [np.argmax(label) for label in y_pred]

    overall_accuracy = accuracy_score(y_true_idx, y_pred_idx)

    class_accuracies = {}
    for i, class_name in enumerate(CLASS_NAMES):
        class_true = [1 if idx == i else 0 for idx in y_true_idx]
        class_pred = [1 if idx == i else 0 for idx in y_pred_idx]
        class_acc = accuracy_score(class_true, class_pred)
        class_accuracies[class_name] = class_acc

    return overall_accuracy, class_accuracies

def main():
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é —Ç–µ–∫—Å—Ç–æ–≤...")

    texts = load_texts(INPUT_FILE)
    true_labels = load_labels(LABELS_FILE)

    if not texts:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—Å—Ç—ã")
        return

    if not true_labels:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–µ—Ç–∫–∏")
        return

    if len(texts) != len(true_labels):
        print(f"‚ö†Ô∏è  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–∫—Å—Ç–æ–≤ ({len(texts)}) –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –º–µ—Ç–æ–∫ ({len(true_labels)})")
        min_len = min(len(texts), len(true_labels))
        texts = texts[:min_len]
        true_labels = true_labels[:min_len]

    if N_TEXTS is not None and N_TEXTS > 0:
        texts = texts[:N_TEXTS]
        true_labels = true_labels[:N_TEXTS]
        print(f"üî¢ –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–æ {N_TEXTS} —Ç–µ–∫—Å—Ç–æ–≤")

    print(f"üìä –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {len(texts)} —Ç–µ–∫—Å—Ç–æ–≤")

    custom_prompt = """
–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π —Ç–∏–ø: —Ç–µ–∫—Å—Ç—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫—É, —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ, –ù–ï —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –ø—Ä–∏–∑—ã–≤–æ–≤ –∫ –∫–∞–∫–∏–º-–ª–∏–±–æ –¥–µ–π—Å—Ç–≤–∏—è–º.

–î–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π —Ç–∏–ø: —Ç–µ–∫—Å—Ç—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –Ω–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—É—é –∫—Ä–∏—Ç–∏–∫—É, —è–≤–Ω–æ –∏ –Ω–µ—è–≤–Ω–æ –ø—Ä–∏–∑—ã–≤–∞—é—â–∏–µ –∫ –Ω–µ–æ–±–¥—É–º–∞–Ω–Ω—ã–º —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏—è–º, –æ—Å–∫–æ—Ä–±–ª—è—é—â–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞ –Ω–∞–≥–Ω–µ—Ç–∞–Ω–∏–µ –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–∞ –∏ –ø–∞–Ω–∏–∫–∏.

–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π —Ç–∏–ø: —Ç–µ–∫—Å—Ç—ã –≤–∫–ª—é—á–∞—é—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–æ–∫–æ–π–Ω–æ–≥–æ, –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ –∏–ª–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ –æ–ø–∏—Å—ã–≤–∞–µ–º—ã–º —Å–æ–±—ã—Ç–∏—è–º, —è–≤–ª–µ–Ω–∏—è–º –∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º. –≠—Ç–∏ —Ç–µ–∫—Å—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É—é—Ç—Å—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è–º–∏ –∏ —Ü–µ–ª–µ–≤—ã–º–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—è–º–∏. –û–Ω–∏ –ø—Ä–∏–∑—ã–≤–∞—é—Ç –∫ —Å–æ–∑–∏–¥–∞—Ç–µ–ª—å–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏—è–º, –ø–æ–±—É–∂–¥–∞—é—Ç –∫ –æ—Å–º—ã—Å–ª–µ–Ω–∏—é —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–º—É –∞–Ω–∞–ª–∏–∑—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Ñ–æ—Ä–º–∏—Ä—É—é—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏–º —Å–æ–±—ã—Ç–∏—è–º, –≤—ã–∑—ã–≤–∞—é—Ç –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Ç–µ–º–µ –∏ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é –∫—Ä—É–≥–æ–∑–æ—Ä–∞ —á–∏—Ç–∞—Ç–µ–ª—è. –í –ª–µ–∫—Å–∏—á–µ—Å–∫–æ–º –ø–ª–∞–Ω–µ —Ç–∞–∫–∏–µ —Ç–µ–∫—Å—Ç—ã —Å–æ–¥–µ—Ä–∂–∞—Ç —É—Å–ø–æ–∫–∞–∏–≤–∞—é—â–µ-–æ–±–æ–¥—Ä—è—é—â—É—é, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ–∫—Ä–∞—à–µ–Ω–Ω—É—é –ª–µ–∫—Å–∏–∫—É, –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ—Ü–µ–Ω–æ—á–Ω—ã–µ —Å—É–∂–¥–µ–Ω–∏—è, –º–µ—Ç–∞—Ñ–æ—Ä—ã –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, –º–æ–≥—É—Ç –≤–∫–ª—é—á–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–≥–æ —Å—Ç–∏–ª—è. –°—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏ –æ–Ω–∏ —á–∞—Å—Ç–æ –ø—Ä–∏–±–µ–≥–∞—é—Ç –∫ –∏—Ä–æ–Ω–∏–∏, —é–º–æ—Ä—É –∏–ª–∏ —Å–∞—Ä–∫–∞–∑–º—É –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω–æ—Å—Ç–∏ –∏–ª–∏ —É—Å–∏–ª–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞, –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–∞–º–æ–∏—Ä–æ–Ω–∏–∏, –ø—Ä–∏–º–µ–Ω—è—é—Ç –∫–∞–∫ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π, —Ç–∞–∫ –∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å –∏–∑–ª–æ–∂–µ–Ω–∏—è. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∏–ª–∏ —Ä–µ—à–µ–Ω–∏–π –ø—Ä–æ–±–ª–µ–º, –≤–∫–ª—é—á–µ–Ω–∏–∏ –ª–∏—á–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∞–≤—Ç–æ—Ä–∞ –∏ –æ–±—É—á–∞—é—â–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤. –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤—ã—Ä–∞–∂–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –≤–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ —Å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º –∏–ª–∏ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–º –ø–æ–¥—Ç–µ–∫—Å—Ç–æ–º, —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö —è–≤–ª–µ–Ω–∏–π –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º. –°—É–±—ä–µ–∫—Ç–∏–≤–Ω—ã–π –∞—Å–ø–µ–∫—Ç –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è –≤ –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ –ª–∏—á–Ω–æ–≥–æ –º–Ω–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∞, –æ–ø–∏—Å–∞–Ω–∏–∏ –µ–≥–æ –æ–ø—ã—Ç–∞ –∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è—Ö –æ –±—É–¥—É—â–µ–º. –ü–∞—Ç—Ä–∏–æ—Ç–∏—á–µ—Å–∫–∏–π –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –∞—Å–ø–µ–∫—Ç—ã –º–æ–≥—É—Ç –≤–∫–ª—é—á–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, –≤—ã–∑—ã–≤–∞—é—â–∏–µ —á—É–≤—Å—Ç–≤–æ –≥–æ—Ä–¥–æ—Å—Ç–∏ –∑–∞ —Å—Ç—Ä–∞–Ω—É –∏ —É–≤–∞–∂–µ–Ω–∏–µ –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –≥—Ä—É–ø–ø–∞–º. –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Ç–∏–º—É–ª—è—Ü–∏—è –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –ø–æ–±—É–∂–¥–µ–Ω–∏–µ –∫ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—é, —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—é, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö —Ç–æ—á–µ–∫ –∑—Ä–µ–Ω–∏—è –∏ –Ω–æ–≤—ã—Ö –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤. –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ —ç–ª–µ–º–µ–Ω—Ç—ã –º–æ—Ç–∏–≤–∞—Ü–∏–∏, –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —á–∏—Ç–∞—Ç–µ–ª—è. –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥ –≤ —ç—Ç–∏—Ö —Ç–µ–∫—Å—Ç–∞—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —É–ª—É—á—à–µ–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏, –ø—Ä–µ–¥–ª–∞–≥–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º. –ñ–∞–Ω—Ä–æ–≤–æ–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–µ—Ü–µ–Ω–∑–∏–π, –æ–±–∑–æ—Ä–æ–≤, –∞–Ω–∞–ª–∏–∑ –∫—É–ª—å—Ç—É—Ä–Ω—ã—Ö —è–≤–ª–µ–Ω–∏–π –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π. –í–∞–∂–Ω–æ–π —á–µ—Ä—Ç–æ–π —è–≤–ª—è–µ—Ç—Å—è —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å: –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å–æ—á–µ—Ç–∞–µ—Ç—Å—è —Å –æ–±–µ—â–∞–Ω–∏–µ–º –∏—Ö —Ä–µ—à–µ–Ω–∏—è, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Ü–µ–ª–æ—Å—Ç–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –±–µ–∑ –Ω–∞–≥–Ω–µ—Ç–∞–Ω–∏—è –ø–∞–Ω–∏–∫–∏ –∏ –ø—Ä–∏–∑—ã–≤–æ–≤ –∫ –¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏—è–º. –¢–µ–∫—Å—Ç—ã –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–∏–ø–∞ –º–æ–≥—É—Ç —Å–æ—á–µ—Ç–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫, –∞–¥–∞–ø—Ç–∏—Ä—É—è—Å—å –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç–µ–º–µ, —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É.
   –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—á–∏—Ç—ã–≤–∞–π —Å–ª—É–¥—É—é—â–∏–µ –≤–µ—Å–∞:
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	factual_presentation	-0,034853278
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	facts_only	-0,202618163
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	clear_structure	-0,451201609
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	irony_or_sarcasm	0,010749291
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	specific_examples	0,121033548
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	social_criticism	0,265700991
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	educational_content	-0,203548961
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	personal_experience	0,134799274
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	balanced_view	-0,181456765
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	negative_generalizations	0,541024425
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	solution_oriented	-0,241887558
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	statistical_data	-0,180872435
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	negative_emotions	0,891916655
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	constructive_analysis	-0,120867823
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	social_commentary	-0,144009235
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	objective_tone	-0,005724606
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	system_criticism	0,400172319
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	political_analysis	-0,047437309
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	positive_tone	-1,231834051
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	cynical_tone	0,070493336
–¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	bias	-0,952973591
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	factual_presentation	-0,576339789
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	facts_only	-0,528400994
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	clear_structure	0,105531383
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	irony_or_sarcasm	0,081179477
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	specific_examples	-0,03758022
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	social_criticism	-0,210361567
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	educational_content	-0,373359809
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	personal_experience	-0,096930384
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	balanced_view	0,309301922
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	negative_generalizations	-0,564663629
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	solution_oriented	0,334970556
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	statistical_data	-0,21337158
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	negative_emotions	-0,681503604
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	constructive_analysis	0,060344665
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	social_commentary	0,334124066
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	objective_tone	-0,197297045
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	system_criticism	-0,073591643
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	political_analysis	-0,526132702
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	positive_tone	0,903643077
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	cynical_tone	-0,043599614
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π	bias	0,268718818
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	factual_presentation	0,557649492
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	facts_only	0,614700835
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	clear_structure	0,142095424
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	irony_or_sarcasm	-0,007084199
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	specific_examples	-0,040168742
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	social_criticism	-0,254174574
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	educational_content	0,474147018
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	personal_experience	-0,021974295
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	balanced_view	-0,159764384
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	negative_generalizations	-0,117612586
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	solution_oriented	-0,219157958
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	statistical_data	0,353563122
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	negative_emotions	-0,860173487
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	constructive_analysis	0,037437032
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	social_commentary	-0,302848374
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	objective_tone	0,107106275
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	system_criticism	-0,470661942
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	political_analysis	0,516776322
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	positive_tone	-0,556881764
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	cynical_tone	-0,03120439
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π	bias	-1,500200134
    """

    # –ò–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤–≤–æ–¥:
    # print("\n" + "="*50)
    # print("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–æ–º–ø—Ç –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
    # custom_prompt = input().strip()
    print("\n" + "="*50)
    print("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–æ–º–ø—Ç –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
    print("(–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ)")
    custom_prompt = input().strip()

    if not custom_prompt:
        custom_prompt = "–ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç –∫–∞–∫ –¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π, –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π –∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π."

    print(f"\nüìä –ë—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤: {len(texts)}")
    print(f"üéØ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–º–ø—Ç: {custom_prompt[:100]}...")

    predictions = []
    results_detailed = []

    for i, text in enumerate(texts, 1):
        print(f"üìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç {i}/{len(texts)}...", end=" ")

        predicted_class = classify_text(text, custom_prompt)
        predictions.append(predicted_class)

        results_detailed.append({
            '–ù–æ–º–µ—Ä': i,
            '–¢–µ–∫—Å—Ç': text[:100] + "..." if len(text) > 100 else text,
            '–ò—Å—Ç–∏–Ω–Ω—ã–π_–∫–ª–∞—Å—Å': onehot_to_class_name(true_labels[i-1]),
            '–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π_–∫–ª–∞—Å—Å': predicted_class,
            '–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ': predicted_class == onehot_to_class_name(true_labels[i-1]) if predicted_class else False
        })

        if predicted_class:
            print(f"‚úÖ {predicted_class}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞")

        time.sleep(1)

    y_true = true_labels  
    y_pred = [text_to_onehot(pred) if pred else [0, 0, 0] for pred in predictions]

    overall_acc, class_accuracies = calculate_metrics(y_true, y_pred)

    print("\n" + "="*60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–ò")
    print("="*60)
    print(f"üéØ –û–±—â–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å: {overall_acc:.3f} ({overall_acc*100:.1f}%)")
    print("\nüìà –¢–æ—á–Ω–æ—Å—Ç—å –ø–æ –∫–ª–∞—Å—Å–∞–º:")

    for class_name, acc in class_accuracies.items():
        print(f"   {class_name:15} : {acc:.3f} ({acc*100:.1f}%)")

    df_results = pd.DataFrame(results_detailed)
  
    summary_data = {
        '–ú–µ—Ç—Ä–∏–∫–∞': ['–û–±—â–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å'] + [f'–¢–æ—á–Ω–æ—Å—Ç—å - {cls}' for cls in CLASS_NAMES],
        '–ó–Ω–∞—á–µ–Ω–∏–µ': [overall_acc] + list(class_accuracies.values()),
        '–ü—Ä–æ—Ü–µ–Ω—Ç': [f"{overall_acc*100:.1f}%"] + [f"{acc*100:.1f}%" for acc in class_accuracies.values()]
    }
    df_summary = pd.DataFrame(summary_data)

    with pd.ExcelWriter(OUTPUT_FILE, engine='openpyxl') as writer:
        df_results.to_excel(writer, sheet_name='–î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã', index=False)
        df_summary.to_excel(writer, sheet_name='–°–≤–æ–¥–∫–∞', index=False)

    print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {OUTPUT_FILE}")
    print(f"üìã –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤: {len(texts)}")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ: {sum(1 for p in predictions if p is not None)}")
    print(f"‚ùå –û—à–∏–±–æ–∫ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏: {sum(1 for p in predictions if p is None)}")

if __name__ == "__main__":
    main()
